
API: /Maker/submitNineMig
{
    "listToBeSentFrom": [
        {
            "circleDescHidden": "006",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "006",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "024",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "024",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "013",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "013",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "008",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "008",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "011",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "011",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "016",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "016",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "010",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "010",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "003",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "003",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "020",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "020",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "015",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "015",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "012",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "012",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "007",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "007",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "023",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "023",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "001",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "001",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "005",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "005",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "002",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "002",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "027",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "027",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "004",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "004",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "009",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "009",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "017",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "017",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "014",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        },
        {
            "circleDescHidden": "014",
            "inSusp2": null,
            "provn2": null,
            "licra2": null,
            "dicgc2": null
        }
    ],
    "listToBeSent": [
        {
            "circleDescHidden": "006",
            "inSusp": null,
            "provn": "5345",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "006",
            "inSusp": null,
            "provn": "5345",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "024",
            "inSusp": "34534",
            "provn": null,
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "024",
            "inSusp": "34534",
            "provn": null,
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "013",
            "inSusp": null,
            "provn": "345345345",
            "licra": "43553443",
            "dicgc": null
        },
        {
            "circleDescHidden": "013",
            "inSusp": null,
            "provn": "345345345",
            "licra": "43553443",
            "dicgc": null
        },
        {
            "circleDescHidden": "008",
            "inSusp": "345345345345345",
            "provn": null,
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "008",
            "inSusp": "345345345345345",
            "provn": null,
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "011",
            "inSusp": "5345345",
            "provn": null,
            "licra": "34543",
            "dicgc": "5345345435435"
        },
        {
            "circleDescHidden": "011",
            "inSusp": "5345345",
            "provn": null,
            "licra": "34543",
            "dicgc": "5345345435435"
        },
        {
            "circleDescHidden": "016",
            "inSusp": null,
            "provn": "53434",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "016",
            "inSusp": null,
            "provn": "53434",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "010",
            "inSusp": null,
            "provn": "5345",
            "licra": null,
            "dicgc": "4355"
        },
        {
            "circleDescHidden": "010",
            "inSusp": null,
            "provn": "5345",
            "licra": null,
            "dicgc": "4355"
        },
        {
            "circleDescHidden": "003",
            "inSusp": null,
            "provn": null,
            "licra": "35345435345",
            "dicgc": null
        },
        {
            "circleDescHidden": "003",
            "inSusp": null,
            "provn": null,
            "licra": "35345435345",
            "dicgc": null
        },
        {
            "circleDescHidden": "020",
            "inSusp": null,
            "provn": "345345345",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "020",
            "inSusp": null,
            "provn": "345345345",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "015",
            "inSusp": "34534",
            "provn": null,
            "licra": null,
            "dicgc": "345"
        },
        {
            "circleDescHidden": "015",
            "inSusp": "34534",
            "provn": null,
            "licra": null,
            "dicgc": "345"
        },
        {
            "circleDescHidden": "012",
            "inSusp": null,
            "provn": null,
            "licra": "345345",
            "dicgc": null
        },
        {
            "circleDescHidden": "012",
            "inSusp": null,
            "provn": null,
            "licra": "345345",
            "dicgc": null
        },
        {
            "circleDescHidden": "007",
            "inSusp": "4353453",
            "provn": "34534",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "007",
            "inSusp": "4353453",
            "provn": "34534",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "023",
            "inSusp": null,
            "provn": "5345",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "023",
            "inSusp": null,
            "provn": "5345",
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "001",
            "inSusp": null,
            "provn": null,
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "001",
            "inSusp": null,
            "provn": null,
            "licra": null,
            "dicgc": null
        },
        {
            "circleDescHidden": "005",
            "inSusp": "5345",
            "provn": "345",
            "licra": "3453455",
            "dicgc": null
        },
        {
            "circleDescHidden": "005",
            "inSusp": "5345",
            "provn": "345",
            "licra": "3453455",
            "dicgc": null
        },
        {
            "circleDescHidden": "002",
            "inSusp": null,
            "provn": null,
            "licra": "345435",
            "dicgc": null
        },
        {
            "circleDescHidden": "002",
            "inSusp": null,
            "provn": null,
            "licra": "345435",
            "dicgc": null
        }
       
        
    ],
    "circleCode": "001",
    "quarterEndDate": "31/03/2025",
    "userId": "1111111",
    "reportName": "9C Migration",
    "reportId": "274434",
    "reportMasterId": "310027",
    "status": "11",
    "save": true
}

Response: 1~274434~11

////////////////////////////////////


public String submitNineMig(List listToBeSent, List listToBeSentFrom, String circleCode, String quarterEndDate,
                                String userId, String reportId, String reportMasterId, String reportName, String status, boolean save){


        log.info("For saving data ? " + save);
        String seq = "";
        String result = "";
        HashMap<String, String> branchCount = new HashMap<String, String>();
        int counter = -1;
        String sequence = makerDao.generateSequence();
        int count = 0;
        /*
         * String queryD=
         * "DELETE FROM BS_SC9Migration_TO where SC9Mig_CIRCLE=? and SC9Mig_DATE=to_date(?,'dd/mm/yyyy')"
         * ; count=jdbcTemplate.update(queryD, new Object[]
         * {circleCode,quarterEndDate});
         */
        /* log.info("count   count count count"+count); */

        /// if(status == null || status.equalsIgnoreCase("")){
        String query = "insert into BS_SC9Migration_TO(SC9Mig_ID,SC9Mig_FK,SC9Mig_DATE,SC9Mig_CIRCLE,SC9Mig_MIGCIRCLE,SC9Mig_INTSUSP,SC9Mig_PROV,SC9Mig_LICRA,SC9Mig_DICGC) VALUES(?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?)";

        String updateQuery = "UPDATE BS_SC9Migration_TO SET SC9Mig_INTSUSP=?,SC9Mig_PROV=?,SC9Mig_LICRA=?,SC9Mig_DICGC=? WHERE SC9Mig_CIRCLE=? and SC9Mig_DATE = to_date(?,'dd/mm/yyyy') and SC9Mig_MIGCIRCLE=?";

        String queryTwo = "insert into BS_SC9Migration_FROM(SC9MigF_ID,SC9MigF_FK,SC9MigF_DATE,SC9MigF_CIRCLE,SC9MigF_MIGCIRCLE,SC9MigF_INTSUSP,SC9MigF_PROV,SC9MigF_LICRA,SC9MigF_DICGC) VALUES(?,?,to_date(?,'dd/mm/yyyy'),?,?,?,?,?,?)";

        String updateQueryTwo = "UPDATE BS_SC9Migration_FROM SET SC9MigF_INTSUSP=?,SC9MigF_PROV=?,SC9MigF_LICRA=?,SC9MigF_DICGC=? WHERE SC9MigF_CIRCLE=? and SC9MigF_DATE = to_date(?,'dd/mm/yyyy') and SC9MigF_MIGCIRCLE=?";

        int flag;

        // int counter=-1;
        if (status == null || status.equalsIgnoreCase("")) {

            for (Object object : listToBeSent) {
                LinkedHashMap map = (LinkedHashMap) object;
                String inSusp = (String) map.get("inSusp");
                String provn = (String) map.get("provn");
                String licra = (String) map.get("licra");
                String dicgc = (String) map.get("dicgc");
                String circleDescHidden = (String) map.get("circleDescHidden");

                String generatedSequence = null;
                /// int status=-1;

                String sequenceid = "select BS_AUDIT_LOG.nextVal from dual ";

                // JdbcTemplate jdbcTemplateObject=new JdbcTemplate(dataSource);

                generatedSequence = jdbcTemplate.query(sequenceid, new ResultSetExtractor<String>() {

                    @Override
                    public String extractData(ResultSet rs) throws SQLException, DataAccessException {
                        // Report report=null;
                        // TODO Auto-generated method stub
                        // List<Report> list=new ArrayList<Report>();
                        String generatedSequence = "";
                        if (rs.next()) {
                            generatedSequence = rs.getString(1);
                        }
                        return generatedSequence;
                    }

                });

                flag = jdbcTemplate.update(query, new Object[]{generatedSequence, sequence, quarterEndDate,
                        circleCode, circleDescHidden, inSusp, provn, licra, dicgc});
                counter = counter + flag;
            }

            for (Object objectFrom : listToBeSentFrom) {
                LinkedHashMap map = (LinkedHashMap) objectFrom;
                String inSusp2 = (String) map.get("inSusp2");
                String provn2 = (String) map.get("provn2");
                String licra2 = (String) map.get("licra2");
                String dicgc2 = (String) map.get("dicgc2");
                String circleDescHidden = (String) map.get("circleDescHidden");

                String generatedSequence = null;
                /// int status=-1;

                String sequenceid = "select BS_AUDIT_LOG.nextVal from dual ";

                // JdbcTemplate jdbcTemplateObject=new JdbcTemplate(dataSource);

                generatedSequence = jdbcTemplate.query(sequenceid, new ResultSetExtractor<String>() {

                    @Override
                    public String extractData(ResultSet rs) throws SQLException, DataAccessException {
                        // Report report=null;
                        // TODO Auto-generated method stub
                        // List<Report> list=new ArrayList<Report>();
                        String generatedSequence = "";
                        if (rs.next()) {
                            generatedSequence = rs.getString(1);
                        }
                        return generatedSequence;
                    }

                });

                flag = jdbcTemplate.update(queryTwo, new Object[]{generatedSequence, sequence, quarterEndDate,
                        circleCode, circleDescHidden, inSusp2, provn2, licra2, dicgc2});
                counter = counter + flag;
            }

            log.info("for saving data ? " + save);

            String sts = "20";
            if (save) {
                sts = "11";
            }
            seq = sequence + "~" + sts;

            makerDao.reportEntryInMasterTable(sequence, reportMasterId, circleCode, quarterEndDate, reportName, userId,
                    sts, "I");
            count = 1;

            log.info("******************************* inserting  SC 9C migration *** status as " + sts);
        } else {

            for (Object object : listToBeSent) {
                LinkedHashMap map = (LinkedHashMap) object;
                String inSusp = (String) map.get("inSusp");
                String provn = (String) map.get("provn");
                String licra = (String) map.get("licra");
                String dicgc = (String) map.get("dicgc");
                String circleDescHidden = (String) map.get("circleDescHidden");

                String generatedSequence = null;
                /// int status=-1;

                String sequenceid = "select BS_AUDIT_LOG.nextVal from dual ";

                // JdbcTemplate jdbcTemplateObject=new JdbcTemplate(dataSource);

                generatedSequence = jdbcTemplate.query(sequenceid, new ResultSetExtractor<String>() {

                    @Override
                    public String extractData(ResultSet rs) throws SQLException, DataAccessException {
                        // Report report=null;
                        // TODO Auto-generated method stub
                        // List<Report> list=new ArrayList<Report>();
                        String generatedSequence = "";
                        if (rs.next()) {
                            generatedSequence = rs.getString(1);
                        }
                        return generatedSequence;
                    }

                });

                flag = jdbcTemplate.update(updateQuery,
                        new Object[]{inSusp, provn, licra, dicgc, circleCode, quarterEndDate, circleDescHidden});
                counter = counter + flag;
            }
            for (Object objectFrom : listToBeSentFrom) {
                LinkedHashMap map = (LinkedHashMap) objectFrom;
                String inSusp2 = (String) map.get("inSusp2");
                String provn2 = (String) map.get("provn2");
                String licra2 = (String) map.get("licra2");
                String dicgc2 = (String) map.get("dicgc2");
                String circleDescHidden = (String) map.get("circleDescHidden");

                String generatedSequence = null;
                /// int status=-1;

                String sequenceid = "select BS_AUDIT_LOG.nextVal from dual ";

                // JdbcTemplate jdbcTemplateObject=new JdbcTemplate(dataSource);

                generatedSequence = jdbcTemplate.query(sequenceid, new ResultSetExtractor<String>() {

                    @Override
                    public String extractData(ResultSet rs) throws SQLException, DataAccessException {
                        // Report report=null;
                        // TODO Auto-generated method stub
                        // List<Report> list=new ArrayList<Report>();
                        String generatedSequence = "";
                        if (rs.next()) {
                            generatedSequence = rs.getString(1);
                        }
                        return generatedSequence;
                    }

                });

                flag = jdbcTemplate.update(updateQueryTwo,
                        new Object[]{inSusp2, provn2, licra2, dicgc2, circleCode, quarterEndDate, circleDescHidden});
                counter = counter + flag;
            }
            log.info("for saving data ?  " + save);

            String sts = "21";
            if (save) {
                sts = "11";
            }
            seq = reportId + "~" + sts;

            makerDao.reportEntryInMasterTable(reportId, reportMasterId, circleCode, quarterEndDate, reportName, userId,
                    sts, "U");

//            log.info("*******************************updating SC 9C migration *** status as " + sts + " and sequence is " + reportId);
            count = 1;

        }

        // }

        //return count;

        result = count + "~" + seq;
//        log.info("############  SC 9C migration submit result is " + result);

        return result;

    }
