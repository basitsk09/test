Thanks for sharing the updated screenshot ‚Äî I can now clearly see the problem:


---

‚ùå Current UI Issues:

1. TOTAL (C) column shows only 0.00 for all rows ‚Äì not updating as per calculated value.


2. Projects under construction and Grand Total fields are rendered but have no visible inputs (no text field) ‚Äì appearing as plain text.




---

‚úÖ Diagnosis

1. TOTAL (C) shows 0.00:

Even though totalC is being calculated correctly in useMemo, your table body is not rendering this cell correctly.

You removed it from columnDisplayHeaders, and now you're manually rendering it.

But if you‚Äôre using:


<FormInput value={displayDataForRow['totalC'] || '0.00'} readOnly />

‚Ä¶and displayDataForRow is stale or coming from the wrong state (e.g., formData instead of calculatedData), it will always render "0.00".


---

‚úÖ Fix for TOTAL (C):

Ensure you're reading from calculatedData (not formData) like so:

<FormInput
  name={`${rowKey}-totalC`}
  value={calculatedData[rowKey]?.totalC || '0.00'}
  readOnly
/>


---

2. Missing Text Fields for premisesUnderCons and grandTotal:

premisesUnderCons is user input, but you're not rendering a <FormInput> with an onChange.

grandTotal is computed, but you also must use calculatedData[rowKey]?.grandTotal.



---

‚úÖ Corrected Manual Column Rendering (place inside TableBody after dynamic columns):

Here is the correct version to place after columnDisplayHeaders.map() inside the row rendering block:

{/* TOTAL (C) - readOnly */}
<StyledTableCell key={`${rowKey}-totalC`}>
  <FormInput
    name={`${rowKey}-totalC`}
    value={calculatedData[rowKey]?.totalC || '0.00'}
    readOnly
  />
</StyledTableCell>

{/* (D) Projects under construction - editable */}
<StyledTableCell key={`${rowKey}-premisesUnderCons`}>
  <FormInput
    name={`${rowKey}-premisesUnderCons`}
    value={formData[rowKey]?.premisesUnderCons || '0.00'}
    onChange={(e) => handleChange(rowKey, 'premisesUnderCons', e.target.value)}
    onBlur={(e) => handleBlur(rowKey, 'premisesUnderCons', e.target.value)}
  />
</StyledTableCell>

{/* Grand Total - readOnly */}
<StyledTableCell key={`${rowKey}-grandTotal`}>
  <FormInput
    name={`${rowKey}-grandTotal`}
    value={calculatedData[rowKey]?.grandTotal || '0.00'}
    readOnly
  />
</StyledTableCell>

> üí° Note: If you‚Äôre using MUI TextField directly, ensure variant, size, and styling props are applied to keep the UI consistent.




---

Let me know if you'd like me to paste this directly into your full code block or if you're using a different FormInput structure.

